{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"S:\\\\workspace\\\\haedream\\\\front\\\\components\\\\Loans.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Icon, Input, Button } from 'antd';\n\nfunction hasErrors(fieldsError) {\n  return _Object$keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar Loans =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Loans, _React$Component);\n\n  function Loans() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Loans);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Loans)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Loans, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disable submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched; // Only show error after a field is touched.\n\n      var usernameError = isFieldTouched('username') && getFieldError('username');\n      var passwordError = isFieldTouched('password') && getFieldError('password');\n      return __jsx(Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(Form.Item, {\n        validateStatus: usernameError ? 'error' : '',\n        help: usernameError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(__jsx(Input, {\n        prefix: __jsx(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), __jsx(Form.Item, {\n        validateStatus: passwordError ? 'error' : '',\n        help: passwordError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(__jsx(Input, {\n        prefix: __jsx(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }))), __jsx(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: hasErrors(getFieldsError()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Log in\")));\n    }\n  }]);\n\n  return Loans;\n}(React.Component);\n\nexport default Loans;","map":{"version":3,"sources":["S:/workspace/haedream/front/components/Loans.js"],"names":["Form","Icon","Input","Button","hasErrors","fieldsError","some","field","Loans","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","handleSubmit","rules","required","message","color","React","Component"],"mappings":"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","sourcesContent":["import { Form, Icon, Input, Button } from 'antd';\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass Loans extends React.Component {\r\n  componentDidMount() {\r\n    // To disable submit button at the beginning.\r\n    this.props.form.validateFields();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n\r\n    // Only show error after a field is touched.\r\n    const usernameError = isFieldTouched('username') && getFieldError('username');\r\n    const passwordError = isFieldTouched('password') && getFieldError('password');\r\n    return (\r\n      <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n        <Form.Item validateStatus={usernameError ? 'error' : ''} help={usernameError || ''}>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item validateStatus={passwordError ? 'error' : ''} help={passwordError || ''}>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loans"]},"metadata":{},"sourceType":"module"}